# gradle build refresh 시 자동으로 context-path 가 Board 로 변경되어지므로 수정해야함
server.servlet.context-path=/
spring.mvc.static-path-pattern=/static/**

server.port = 80

spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp

# JSP 수정시 서버 재시작없이 바로 적용할 수 있게 설정
server.servlet.jsp.init-parameters.development = true

# mapper.xml 경로 설정
# sts 4.0
# spring.datasource.mapper-locations=classpath:/mapper/**/*.xml     
 # sts 3.0
##mybatis.mapper-locations:classpath:mapper/**/*.xml                 

#  설정을 class 로 변경
#mybatis.mapper-locations:classpath:mapper/*.xml

#mybatis 설정
mybatis.configuration.jdbc-type-for-null=NULL

# datasource 설정
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=spring
spring.datasource.password=1234 

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# Spring Security 디버그 모드 활성화
logging.level.org.springframework.security=DEBUG

# Google
spring.security.oauth2.client.registration.google.client-id=592040197870-kq1a0k4vs1goldd1b7bpvjpdj5h5m081.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# Naver
spring.security.oauth2.client.registration.naver.client-id=33Lo_x6wxlHBFdpOAKNR
spring.security.oauth2.client.registration.naver.client-secret=EJanzFkApk
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# Kakao
spring.security.oauth2.client.registration.kakao.client-id=89f20a14e1ffea9400cda46216a2d050
spring.security.oauth2.client.registration.kakao.client-secret=DDZy2DIgPOaLF8uhWLPwtm3V5Pc1D5iM
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,talk_message
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost/login/oauth2/code/kakao

# 카카오 OAuth2 설정
# 카카오 인증 서버의 사용자 인증(로그인) 페이지 주소
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
# 액세스 토큰을 발급받기 위한 카카오 인증 서버 주소
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
# 액세스 토큰을 이용하여 사용자 정보를 가져올 카카오 API 서버 주소
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
# 카카오 API 서버로부터 받아온 사용자 정보 중 사용자를 구분할 수 있는 유니크한 값이 들어있는 필드의 이름
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


# mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true